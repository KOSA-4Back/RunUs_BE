### Member 생성 요청
POST http://localhost:8080/member/create
Content-Type: application/json

{
  "email": "qwer@gmail.com",
  "nickName": "다시한번테스트",
  "password": "qwer1234",
  "birth": "1919-01-07",
  "height": 180,
  "weight": 72
}
### 메인 서버에서 전체 Member 검색 (오라클)
GET http://localhost:8080/api/member/findAll
Content-Type: application/json
Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJldW5qdW5na2ltMTAwNEBuYXZlci5jb20iLCJ1c2VySWQiOjIsInJvbGUiOiJVU0VSIiwiaWF0IjoxNzIxOTAyNDQ0LCJleHAiOjE3MjE5MDQyNDR9.ru-TKGP9EIdoGN64C-HrRrRuC_TYgwtHVlul03V1w_g

### 채팅 서버 Mongo DB 전체 조회
GET http://localhost:8081/member/findAll



###  메인 서버(오라클)에서 id 로 검색
@id = 22
GET http://localhost:8080/member/findById/{{id}}

###  채팅 서버(Mongo DB)에서 id 로 검색
@id2 = 22
GET http://localhost:8081/member/findById/{{id2}}


### USER Role ADMIN 변경
@userId = 22
PUT http://localhost:8080/member/roleUpdate/{{userId}}


### 프로필 사진 업데이트
PUT http://localhost:8080/member/updateMemberProfile
Content-Type: application/json

{
  "userId": 22,
  "profileUrl": "엄청귀여운사진URL"
}

### Member 정보수정
PUT http://localhost:8080/member/updateMemberInfo
Content-Type: application/json

{
  "userId": 22,
  "nickName": "테스트닉변경",
  "birth": "2024-12-12",
  "height": 190,
  "weight": 88
}

### 채팅 서버 Mongo DB 전체 조회
GET http://localhost:8081/member/findAll

### 메인 서버에서 전체 Member 검색 (오라클)
GET http://localhost:8080/member/findAll


### 소프트 DELETE
@deleteID = 원하는 ID
DELETE http://localhost:8080/member/deleteById/{{deleteID}}

### 전체 소프트 DELETE
DELETE http://localhost:8080/member/deleteAll


### 회원가입 요청 (memberId 가 data 에 담기는거 확인가능)
POST http://localhost:8080/api/auth/register
Content-Type: multipart/form-data; boundary=boundary

--boundary 제이슨 데이터
Content-Disposition: form-data; name="form"; filename="blob"
Content-Type: application/json

{
  "email": "onlyEnglishPrimay@example.com",
  "nickName": "tonic",
  "password": "password123",
  "birth": "1990-01-01",
  "height": 180,
  "weight": 75
}
--boundary 폼 데이터(사진)
Content-Disposition: form-data; name="file"; filename="testfile.txt"
Content-Type: text/plain

테스트 파일입니다.
--boundary--

### 로그인 요청
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "email": "onlyEnglishPrimay@example.com",
  "password": "password123"
}

### 로그아웃 / 토큰 파기 테스트 (로그인 토큰 " " 쌍따옴표 꼭 뺴주세요)
@login_token = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0QGV4YW1wbGUuY29tIiwidXNlcklkIjoxLCJyb2xlIjoiVVNFUiIsImlhdCI6MTcyMjAxMDg5MywiZXhwIjoxNzIyMDEyNjkzfQ.rS4Mmvw0Mu2KBgZur-MtuQSNOW7gjQn2LcVDgkJTmW4
POST localhost:8080/api/auth/logout
Content-Type: application/json
Authorization: Bearer {{login_token}}