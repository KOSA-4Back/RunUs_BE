CREATE USER runus IDENTIFIED BY "kosa4back!runus!@123";
GRANT CONNECT, RESOURCE TO runus;


-- 테이블 삭제
DROP TABLE locations CASCADE CONSTRAINTS;
DROP TABLE run_total_infos CASCADE CONSTRAINTS;
DROP TABLE today_goal CASCADE CONSTRAINTS;
DROP TABLE members CASCADE CONSTRAINTS;



-- 테이블 생성
CREATE TABLE members (
	user_id 	NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	email		VARCHAR2(50) NOT NULL,
	nick_name	VARCHAR2(50) NOT NULL,
	password	VARCHAR2(225) NOT NULL,
	birth		DATE NOT NULL,
	profile_url	VARCHAR2(500) DEFAULT NULL,
	height		NUMBER NOT NULL,
	weight		NUMBER NOT NULL,
	role		VARCHAR2(5) DEFAULT 'USER' NOT NULL,
	created_at 	TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	updated_at 	TIMESTAMP NOT NULL,
	deleted_at 	TIMESTAMP DEFAULT NULL
);

COMMENT ON COLUMN members.user_id IS '유저 아이디 (auto increment)';
COMMENT ON COLUMN members.email IS '이메일';
COMMENT ON COLUMN members.nick_name IS '닉네임';
COMMENT ON COLUMN members.password IS '비밀번호';
COMMENT ON COLUMN members.birth IS '생년월일';
COMMENT ON COLUMN members.profile_url IS '프로필 이미지 url';
COMMENT ON COLUMN members.height IS '키';
COMMENT ON COLUMN members.weight IS '몸무게';
COMMENT ON COLUMN members.role IS 'role (회원: USER, 관리자: ADMIN)';
COMMENT ON COLUMN members.created_at IS '생성일시';
COMMENT ON COLUMN members.updated_at IS '수정일시';
COMMENT ON COLUMN members.deleted_at IS '삭제일시';



CREATE TABLE run_total_infos (
	total_info_id	NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	today_goal_id	NUMBER NOT NULL,
	user_id			NUMBER NOT NULL,
	start_time 		TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	end_time 		TIMESTAMP NULL,
	total_distance 	NUMBER DEFAULT 0 NOT NULL,
	total_calories 	NUMBER DEFAULT 0 NOT NULL,
	deleted_at 		TIMESTAMP DEFAULT NULL
);

COMMENT ON COLUMN run_total_infos.total_info_id IS '달리기 정보 아이디 (auto increment)';
COMMENT ON COLUMN run_total_infos.today_goal_id IS '오늘 목표 아이디';
COMMENT ON COLUMN run_total_infos.user_id IS '유저 아이디';
COMMENT ON COLUMN run_total_infos.start_time IS '시작 일시';
COMMENT ON COLUMN run_total_infos.end_time IS '종료일시';
COMMENT ON COLUMN run_total_infos.total_distance IS '총 거리';
COMMENT ON COLUMN run_total_infos.total_calories IS '총 칼로리';
COMMENT ON COLUMN run_total_infos.deleted_at IS '삭제일시';



CREATE TABLE today_goal (
	today_goal_id	NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id	 		NUMBER NOT NULL,
	today			DATE NOT NULL,
	goal_km 		NUMBER DEFAULT 0 NULL,
	registed_at 	TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	deleted_at 		TIMESTAMP DEFAULT NULL
);

COMMENT ON COLUMN today_goal.today_goal_id IS '오늘 목표 아이디 (auto increment)';
COMMENT ON COLUMN today_goal.user_id IS '유저 아이디';
COMMENT ON COLUMN today_goal.today IS '날짜';
COMMENT ON COLUMN today_goal.goal_km IS '목표 km';
COMMENT ON COLUMN today_goal.registed_at IS '등록일시';
COMMENT ON COLUMN today_goal.deleted_at IS '삭제일시';



CREATE TABLE locations (
	location_id		NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	total_info_id	NUMBER NOT NULL,
	user_id			NUMBER NOT NULL,
	latitude		NUMBER(10, 7) NOT NULL,
	longitude 		NUMBER(10, 7) NOT NULL,
	distance 		NUMBER(10, 1) DEFAULT 0 NOT NULL,
	calories 		NUMBER DEFAULT 0 NOT NULL,
	record_time 	TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	deleted_at 		TIMESTAMP DEFAULT NULL
);

COMMENT ON COLUMN locations.location_id IS '위치 아이디 (auto increment)';
COMMENT ON COLUMN locations.total_info_id IS '달리기 정보 아이디';
COMMENT ON COLUMN locations.user_id IS '유저 아이디';
COMMENT ON COLUMN locations.latitude IS '위도';
COMMENT ON COLUMN locations.longitude IS '경도';
COMMENT ON COLUMN locations.distance IS '현재 거리';
COMMENT ON COLUMN locations.calories IS '현재 칼로리';
COMMENT ON COLUMN locations.record_time IS '기록일시';
COMMENT ON COLUMN locations.deleted_at IS '삭제일시';


-- 외래 키 제약 조건 추가
ALTER TABLE run_total_infos ADD CONSTRAINT FK_run_total_infos_goal_id FOREIGN KEY (today_goal_id) REFERENCES today_goal (today_goal_id);
ALTER TABLE today_goal ADD CONSTRAINT FK_today_goal_user_id FOREIGN KEY (user_id) REFERENCES members (user_id);
ALTER TABLE locations ADD CONSTRAINT FK_locations_info_id FOREIGN KEY (total_info_id) REFERENCES run_total_infos (total_info_id);


-- 인덱스 생성
CREATE INDEX idx_user_id_today ON today_goal (user_id, today);



COMMIT;